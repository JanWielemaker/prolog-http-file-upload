Prolog のプログラムは一階述語論理に基づいてデータ間の関係を示す命題とし
て記述され、処理系がそれらに単一化(ユニフィケーション)と呼ばれるパター
ンマッチングを施しながら、与えられた命題が成立するか再帰的手続きによっ
て探索している。

プログラムの実行は述語集合が定義された環境の元で、質問することによって
なされるが、これは反駁という述語論理的な証明過程を模して、処理系が用意
する導出木と呼ばれるグラフをたどって解を得る過程である。 Prolog のもと
となるこの演繹手法は導出と呼ばれ、自動定理証明の研究において Prolog 開
発以前からよく知られていた。Prolog は、導出において節を頭部が一つの命題
からのみなるホーン節に限定したもので、この場合の導出をSLD導出と呼ぶ。ホー
ン節に限定しているということは、つまり、Prolog は任意の述語をそのまま扱
えるわけではない。Prolog が述語の形式をホーン節に限定した理由は、もし頭
部に項の連言を認めるならば、導出時の計算量が爆発的に増大して、全ての解
を得ることの保証が難しくなることが必至だからである。

述語論理を論理的な背景に持つことによって、Prolog のプログラムはその正し
さを確認することが比較的容易である。同時に、プログラマは Prolog でプロ
グラミングすることが何を意味するかを明確に理解した上で、プログラムを書
いていくことができる。
